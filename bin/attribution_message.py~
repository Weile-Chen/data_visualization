#!/usr/bin/python
#_*_ coding:utf-8 _*_
import pandas as pd

def get_message(provinces,cities):
    count_area = {"华东地区":0,"华南地区":0,"华中地区":0,"华北地区":0,"西北地区":0,"西南地区":0,"东北地区":0,"台港澳地区":0}
    count_stage = {"一线城市":0,"二线城市":0,"三线城市":0,"四线城市":0,"五线城市":0}
    
    area_index = {0:"华东地区",1:"华南地区",2:"华中地区",3:"华北地区",4:"西北地区",5:"西南地区",6:"东北地区",7:"台港澳地区"}
    stage_index = {0:"一线城市",1:"二线城市",2:"三线城市",3:"四线城市",4:"五线城市"}

    temp = []

    #read imformation about area,save in area_num
    area_file = open("../data/cities_area",'r')   
    area = []

    for line in area_file:
        temp = line.split(" ")
        area.append(temp)

    #read imformation about city's stage,save in stage_num
    stage_file = open("../data/stage",'r')
    stage = []

    for line in stage_file:
        if line =="\n":
            stage.append(temp)
            continue
        line_part = line.split(" ")
        i = 0
        temp = []
        while i < len(line_part):
            temp.append(line_part[i])
            i = i + 1
       
    print len(stage),len(area)

    #count the amount of cities' number in differnt area
    for province in provinces:
        i = 0
        while i < 8:
            j = 0
            while j < len(area[i]):
	        is_match = (province == area[i][j])
                if is_match:
                    count_area[area_index[i]] = count_area[area_index[i]] + 1
                    break
	        else:
                    j = j + 1

            if is_match:
                break
            else:
                i = i + 1

    i = 0
    j = 0

    #count the amount of cities' number in differnt area
    for city in cities:
        i = 0
        while i < 5:
            j = 0

            while j < len(stage[i]):
	        is_match = (city == stage[i][j])
                if is_match:
                    count_stage[stage_index[i]] = count_stage[stage_index[i]] + 1
                    break
	        else:
                    j = j + 1

            if is_match:
                break
            else:
                i = i + 1

        
    return count_area,count_stage

provinces = ['\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\xb9\xbf\xe4\xb8\x9c', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\xb9\xbf\xe4\xb8\x9c', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe9\x87\x8d\xe5\xba\x86', '\xe6\xb1\x9f\xe8\x8b\x8f', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe6\xb1\x9f\xe8\x8b\x8f', '\xe9\x87\x8d\xe5\xba\x86', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe9\x87\x8d\xe5\xba\x86', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe4\xba\x91\xe5\x8d\x97', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe9\x87\x8d\xe5\xba\x86', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\xb9\xbf\xe4\xb8\x9c', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe9\xbb\x91\xe9\xbe\x99\xe6\xb1\x9f', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe5\x9b\x9b\xe5\xb7\x9d', '\xe9\xbb\x91\xe9\xbe\x99\xe6\xb1\x9f'] 

cities = ['\xe6\x88\x90\xe9\x83\xbd', '\xe8\xa5\xbf\xe6\x98\x8c', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe7\xbb\xb5\xe9\x98\xb3', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe8\x87\xaa\xe8\xb4\xa1', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\xb7\xb1\xe5\x9c\xb3', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe4\xb8\x9c\xe8\x8e\x9e', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe9\x87\x8d\xe5\xba\x86', '\xe8\x8b\x8f\xe5\xb7\x9e', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe8\x8b\x8f\xe5\xb7\x9e', '\xe9\x87\x8d\xe5\xba\x86', '\xe6\x88\x90\xe9\x83\xbd', '\xe8\x87\xaa\xe8\xb4\xa1', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe8\xa5\xbf\xe6\x98\x8c', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe9\x87\x8d\xe5\xba\x86', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe7\x94\x98\xe5\xad\x9c', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x96\x87\xe5\xb1\xb1', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe7\x9c\x89\xe5\xb1\xb1', '\xe5\x8d\x97\xe5\x85\x85', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe9\x87\x8d\xe5\xba\x86', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe4\xbd\x9b\xe5\xb1\xb1', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe8\x87\xaa\xe8\xb4\xa1', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe7\xbb\xb5\xe9\x98\xb3', '\xe6\x88\x90\xe9\x83\xbd', '\xe5\x93\x88\xe5\xb0\x94\xe6\xbb\xa8', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe6\x88\x90\xe9\x83\xbd', '\xe5\x93\x88\xe5\xb0\x94\xe6\xbb\xa8']

count_area,count_stage = get_message(provinces,cities)
print count_area
print "\n\n\n"
print count_stage







                
